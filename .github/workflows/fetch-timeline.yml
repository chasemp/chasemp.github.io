name: Fetch Timeline Data

on:
  # Run every 4 hours
  schedule:
    - cron: '0 */4 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run when fetch scripts change (for testing)
  push:
    branches:
      - master
    paths:
      - 'astro/scripts/fetch-*.mts'
      - '.github/workflows/fetch-timeline.yml'

# Grant write permissions to the GITHUB_TOKEN
permissions:
  contents: write

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'astro/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./astro
        run: npm ci
      
      - name: Fetch Bluesky posts
        working-directory: ./astro
        run: npm run fetch:bluesky
      
      - name: Fetch blog posts
        working-directory: ./astro
        run: npm run fetch:blog
      
      - name: Fetch Readwise (optional)
        working-directory: ./astro
        run: npm run fetch:readwise || echo "Readwise fetch failed or skipped"
        env:
          READWISE_TOKEN: ${{ secrets.READWISE_TOKEN }}
          READWISE_TAG_FILTER: ${{ secrets.READWISE_TAG_FILTER }}
      
      - name: Merge sources
        working-directory: ./astro
        run: npm run merge
      
      - name: Check for changes
        id: changes
        run: |
          git diff --quiet astro/data/sources/ astro/src/data/timeline.json || echo "changed=true" >> $GITHUB_OUTPUT
      
      - name: Commit and push data changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add astro/data/sources/ astro/src/data/timeline.json
          git commit -m "ðŸ¤– Auto-fetch timeline data (Bluesky, Readwise, Blog)"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: No changes detected
        if: steps.changes.outputs.changed != 'true'
        run: echo "No new timeline data, skipping commit"

